#Speed and Rank:
#11 ms
#Beat 83% of users with Python

#Instructions:
#Given two strings s and t, return true if s is a subsequence of t, or false otherwise.
#A subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., "ace" is a subsequence of "abcde" while "aec" is not).

#Example 1:
#Input: s = "abc", t = "ahbgdc"
#Output: true

#Example 2:
#Input: s = "axc", t = "ahbgdc"
#Output: false
 
#Constraints:
#0 <= s.length <= 100
#0 <= t.length <= 104
#s and t consist only of lowercase English letters.

#Solultion:
if s == "":
            return True
        elif t == "":
            return False
        else:
            for i in range(0, len(s)):
                if s[i] not in t: #a letter in s is not in t
                    return False
                else:
                    t = t[(t.index(s[i]) + 1):] #t now starts one index after the letter that has just been found
                    #this ensures that the matching letters found are in the right order
            return True
            return True
