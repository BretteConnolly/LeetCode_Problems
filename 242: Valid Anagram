#Instructions:
#Given two strings s and t, return true if t is an anagram of s, and false otherwise.
#An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

#Example 1:
#Input: s = "anagram", t = "nagaram"
#Output: true

#Example 2:
#Input: s = "rat", t = "car"
#Output: false
 
#Constraints:
#1 <= s.length, t.length <= 5 * 104
#s and t consist of lowercase English letters.

#Solution:
class Solution(object):
    def isAnagram(self, s, t):
        """
        :type s: str
        :type t: str
        :rtype: bool
        """
        if len(s) != len(t): #must have the same number of letters to be an anagram
            return False
        sorted_s = sorted(s) #standardize the two strings by putting their letters in alphabetical order
        sorted_t = sorted(t)
        if sorted_s == sorted_t: #the two strings have the exact same letters, and only the exact same letters
            return True
        else:
            return False
